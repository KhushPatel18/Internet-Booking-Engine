* {
   box-sizing: border-box;
}

button {
   cursor: pointer;
   background: transparent;
   border: none;
}

dialog::backdrop {
   opacity: 0.75;
   background-color: rgb(45, 45, 46);
}
/*   Open state of the dialog  */
dialog[open] {
   opacity: 1;
   transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
   opacity: 0;
   transform: scaleY(0);
   transition: opacity 0.7s ease-out, transform 0.7s ease-in-out,
      overlay 0.7s ease-out allow-discrete,
      display 0.7s ease-in-out allow-discrete;
   /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
      as the specificity is the same */
@starting-style {
   dialog[open] {
      opacity: 0;
      transform: scaleY(0);
   }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
   background-color: rgb(0 0 0 / 0%);
   transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,
      background-color 0.7s;
   /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
   background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
   -webkit-appearance: none;
   margin: 0;
}

input[type="number"] {
   /* Optionally, you can style the input to look the way you want */
   appearance: textfield;
}

&::-webkit-scrollbar {
   display: none;
}
